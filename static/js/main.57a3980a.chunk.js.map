{"version":3,"sources":["assets/logo.svg","assets/icons/go.svg","assets/icons/back.svg","assets/background.svg","pages/Dashboard/styles.tsx","components/Repository/styles.tsx","components/Repository/index.tsx","services/api.ts","pages/Dashboard/index.tsx","pages/Repository/styles.tsx","components/Issues/styles.tsx","components/Issues/index.tsx","pages/Repository/index.tsx","Routes.tsx","styles/global.tsx","App.tsx","index.tsx"],"names":["module","exports","Container","styled","main","Form","form","shade","Error","span","div","Infomations","Go","Repository","name","description","avatar","to","src","alt","GoIcon","api","axios","create","baseURL","Dashboard","useState","searchRepo","setSearchRepo","AppError","setAppError","repositories","setRepositories","useEffect","storage","localStorage","getItem","storageRepos","JSON","parse","handleAddRepository","event","a","preventDefault","get","data","newRepository","updatedRepositories","find","repo","full_name","setItem","stringify","LogoImg","onSubmit","onChange","value","target","type","placeholder","map","owner","key","avatar_url","Header","header","Infomartion","ListItem","li","Loading","Issues","author","repository_params","useRouteMatch","params","repository","setRepository","issues","setIssues","Promise","all","repoData","issuesData","updatedRepository","console","log","backIcon","stargazers_count","forks_count","open_issues_count","title","user","login","Routes","exact","path","component","GlobalStyles","createGlobalStyle","BackgroundImage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57a3980a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/go.9b6f965d.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.877fb2ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.77757c08.svg\";","import styled from 'styled-components';\r\nimport { shade } from 'polished'\r\n\r\nexport const Container = styled.main`\r\n  h1{\r\n    font-size: 48px;\r\n    color: #3a3a3a;\r\n\r\n    margin-top: 80px;\r\n    max-width: 450px;\r\n    line-height: 56px;\r\n  }\r\n`\r\n\r\nexport const Form = styled.form`\r\n\r\n  margin-top: 40px;\r\n  display: flex;\r\n\r\n  input,button{\r\n    height: 72px;\r\n    border: none;\r\n  }\r\n\r\n  input{\r\n    flex: 1;\r\n    width: 504px;\r\n    color: #3a3a3a;\r\n    font-size: 20px;\r\n    padding: 25px 30px;\r\n    border-radius: 5px 0px 0px 5px; \r\n\r\n    &::placeholder{\r\n      color: #a8a8b3;\r\n    }\r\n  }\r\n\r\n  button{\r\n    width: 210px;\r\n    background: #04D361;\r\n    color: #FFFFFF;\r\n    border-radius: 0px 5px 5px 0px; \r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n\r\n    transition: background-color 0.2s; \r\n\r\n    &:hover{\r\n      background: ${shade(0.2, '#04D361')};\r\n    }\r\n  }\r\n\r\n`\r\nexport const Error = styled.span`\r\n  display: block;\r\n  margin-top: 8px;\r\n  color: #c53030\r\n`","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div` \r\n  border-radius: 5px;\r\n\r\n  width: 715px;\r\n  height: 112px;\r\n  margin-bottom: 16px;\r\n  margin-top: 110px;\r\n  background: #fff;\r\n\r\n  transition: transform 0.2s;\r\n\r\n  & + &{\r\n    margin-top: 0px;\r\n  }\r\n\r\n  &:hover{\r\n    transform: translateX(10px)\r\n  }\r\n\r\n  a {\r\n    text-decoration: none !important;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const Infomations = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex: 1;\r\n\r\n  img {\r\n    height: 84px;\r\n    border-radius: 50%;\r\n    margin: 14px;\r\n    margin-right: 22px;\r\n  }\r\n\r\n  strong{\r\n    color: #3D3D4D;\r\n    font-weight: bold;\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n  }\r\n\r\n  p{\r\n    color: #A8A8B3;\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n  }\r\n`\r\n\r\nexport const Go = styled.div`\r\n\r\n  margin-right: 17px;\r\n  \r\n  img{\r\n    height: 17px;\r\n    width: 10px;\r\n  }\r\n`","import React from 'react';\r\n\r\nimport { Container, Infomations, Go } from './styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// => Img\r\nimport GoIcon from '../../assets/icons/go.svg'\r\n\r\ninterface RepositoryInterface {\r\n  name: string;\r\n  description?: string;\r\n  avatar: string;\r\n}\r\n\r\nconst Repository: React.FC<RepositoryInterface> = ({\r\n  name,\r\n  description,\r\n  avatar\r\n}) => {\r\n  return (\r\n\r\n    <Container>\r\n      <Link to={`/repository/${name}`}>\r\n        <Infomations>\r\n          <img src={avatar} alt=\"Foto de perfil\" />\r\n          <div>\r\n            <strong>{name}</strong>\r\n            <p>{description ? description : 'Sem descrição'}</p>\r\n          </div>\r\n        </Infomations>\r\n        <Go>\r\n          <img src={GoIcon} alt=\"Navegar para página de repositorios\" />\r\n        </Go>\r\n      </Link>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Repository;","import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.github.com/'\r\n})\r\n\r\nexport default api","import React, { ChangeEvent, FormEvent, useState, useEffect } from 'react';\r\n\r\nimport { Container, Form, Error } from './styles';\r\n\r\n// => Imagens\r\nimport LogoImg from '../../assets/logo.svg'\r\n\r\n// => Components\r\nimport Repository from '../../components/Repository'\r\n\r\n// => Services\r\nimport api from '../../services/api'\r\n\r\ninterface Irepository {\r\n  full_name: string\r\n  description?: string\r\n  owner: {\r\n    login: string\r\n    avatar_url: string\r\n  }\r\n}\r\n\r\nconst Dashboard: React.FC = () => {\r\n\r\n  const [searchRepo, setSearchRepo] = useState<string>('')\r\n  const [AppError, setAppError] = useState<string>('')\r\n  const [repositories, setRepositories] = useState\r\n    <Irepository[]>([] as Irepository[])\r\n\r\n  useEffect(() => {\r\n    const storage = localStorage.getItem('repositories')\r\n\r\n    if (!storage) {\r\n      return\r\n    }\r\n    const storageRepos = JSON.parse(storage)\r\n\r\n    setRepositories(storageRepos)\r\n  }, [])\r\n\r\n  const handleAddRepository = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n\r\n    if (!searchRepo) {\r\n      setAppError('Digite autor/repositório')\r\n      return\r\n    }\r\n\r\n    try {\r\n      const data = await api.get<Irepository>(`repos/${searchRepo}`)\r\n\r\n      const newRepository = data.data\r\n      const updatedRepositories = [...repositories, newRepository]\r\n      setRepositories(updatedRepositories)\r\n\r\n      const checkingRepository = repositories.find((repo) => (\r\n        repo.full_name === searchRepo\r\n      ))\r\n\r\n      if (checkingRepository) {\r\n        setAppError('Esse repósitorio já existe em sua lista')\r\n        return\r\n      }\r\n\r\n      localStorage.setItem('repositories', JSON.stringify(updatedRepositories))\r\n\r\n      setSearchRepo('')\r\n      setAppError('')\r\n    } catch (err) {\r\n      setAppError(`Erro ao acessar o repositório ${searchRepo}`)\r\n    }\r\n  }\r\n\r\n  const updateSearchRepo = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const value = event.target.value\r\n    setSearchRepo(value)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <img src={LogoImg} alt=\"Logo Github Explorer\" />\r\n      <h1>Explore repositórios no Github</h1>\r\n\r\n      <Form onSubmit={handleAddRepository}>\r\n        <input\r\n          onChange={updateSearchRepo}\r\n          value={searchRepo}\r\n          type=\"text\"\r\n          placeholder=\"Digite o nome do repositório\" />\r\n        <button\r\n          type=\"submit\">\r\n          Pesquisar\r\n        </button>\r\n      </Form>\r\n      {AppError && <Error>{AppError}</Error>}\r\n\r\n      {repositories.map(({ full_name, description, owner }) => (\r\n        <Repository\r\n          key={full_name}\r\n          name={full_name}\r\n          description={description}\r\n          avatar={owner.avatar_url}\r\n        />\r\n      ))}\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Dashboard;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.main`\r\n  \r\n`;\r\n\r\nexport const Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  img{\r\n    width: 215px;\r\n    height: 32px;\r\n  }\r\n\r\n  a{\r\n    text-decoration: none;\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n    line-height: 19px;\r\n    color: #A8A8B3;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n\r\n    img{\r\n      width: 8px;\r\n      height: 12px;\r\n      margin-right: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Infomartion = styled.div`\r\n\r\n  margin-top: 80px;\r\n\r\n  header{\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    img{\r\n\r\n      height: 120px;\r\n      border-radius: 50%;\r\n      margin-right: 32px;\r\n    }\r\n\r\n    div{\r\n      strong{\r\n        font-weight: bold;\r\n        font-size: 36px;\r\n        line-height: 42px;\r\n        color: #3D3D4D;\r\n      }\r\n\r\n      p{\r\n        font-size: 20px;\r\n        line-height: 23px;\r\n        color: #737380;\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  ul{\r\n    margin-top: 40px;\r\n    display: flex;\r\n    list-style: none;\r\n  }\r\n`\r\nexport const ListItem = styled.li`\r\n  margin-right: 80px;\r\n\r\n  strong{\r\n    font-weight: bold;\r\n    font-size: 36px;\r\n    line-height: 42px;\r\n    color: #3D3D4D;\r\n  }\r\n\r\n  p{\r\n    margin-top: 4px;\r\n    font-size: 20px;\r\n    line-height: 23px;\r\n    color: #6C6C80;\r\n  }\r\n`\r\nexport const Loading = styled.div`\r\n\r\n  position: absolute;\r\n\r\n  left:0;\r\n  top:0;\r\n\r\n  width: 100vw;\r\n  height: 100vh;\r\n  \r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  h1{\r\n    font-size: 48px;\r\n    color: #3D3D4D;\r\n  }\r\n\r\n`","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div` \r\n  border-radius: 5px;\r\n\r\n  width: 960px;\r\n  height: 112px;\r\n  margin-bottom: 16px;\r\n  margin-top: 110px;\r\n  background: #fff;\r\n\r\n  transition: transform 0.2s;\r\n\r\n  & + &{\r\n    margin-top: 0px;\r\n  }\r\n\r\n  &:hover{\r\n    transform: translateX(10px)\r\n  }\r\n\r\n  text-decoration: none !important;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n \r\n`;\r\n\r\nexport const Infomations = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  margin-left: 24px;\r\n\r\n  strong{\r\n    color: #3D3D4D;\r\n    font-weight: bold;\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  p{\r\n    color: #A8A8B3;\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n  }\r\n`\r\n\r\nexport const Go = styled.div`\r\n\r\n  margin-right: 17px;\r\n  \r\n  img{\r\n    height: 17px;\r\n    width: 10px;\r\n  }\r\n`","import React from 'react';\r\n\r\nimport { Container, Infomations, Go } from './styles';\r\n\r\n// => Img\r\nimport GoIcon from '../../assets/icons/go.svg'\r\n\r\ninterface IssuesInterface {\r\n  name: string;\r\n  author?: string;\r\n}\r\n\r\nconst Issues: React.FC<IssuesInterface> = ({\r\n  name,\r\n  author,\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <Infomations>\r\n        <strong>{name}</strong>\r\n        <p>{author ? author : 'Sem descrição'}</p>\r\n      </Infomations>\r\n      <Go>\r\n        <img src={GoIcon} alt=\"Navegar para página de repositorios\" />\r\n      </Go>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Issues;","import React, { useEffect, useState } from 'react';\r\nimport { useRouteMatch, Link } from 'react-router-dom';\r\n\r\nimport { Container, Header, Infomartion, ListItem, Loading } from './styles';\r\n\r\n// => Service\r\nimport api from '../../services/api'\r\n\r\n// => Imagens\r\nimport LogoImg from '../../assets/logo.svg'\r\nimport backIcon from '../../assets/icons/back.svg'\r\n\r\n// => Components\r\nimport Issues from '../../components/Issues'\r\n\r\ninterface Iparams {\r\n  repository_params: string\r\n}\r\n\r\ninterface Irepository {\r\n  full_name: string\r\n  description?: string\r\n  stargazers_count: number\r\n  open_issues_count: number\r\n  forks_count: number\r\n  owner: {\r\n    login: string\r\n    avatar_url: string\r\n  }\r\n}\r\n\r\ninterface Iissues {\r\n  title: string\r\n  user: {\r\n    login: string\r\n  }\r\n}\r\n\r\nconst Repository: React.FC = () => {\r\n  const { repository_params } = useRouteMatch<Iparams>().params\r\n  const [repository, setRepository] = useState<Irepository>()\r\n  const [issues, setIssues] = useState<Iissues[]>()\r\n\r\n  useEffect(() => {\r\n    const updatedRepository = async () => {\r\n\r\n      const [repoData, issuesData] = await Promise.all([\r\n        api.get<Irepository>(`repos/${repository_params}`),\r\n        api.get<Iissues[]>(`repos/${repository_params}/issues`)\r\n      ])\r\n\r\n      setRepository(repoData.data)\r\n      setIssues(issuesData.data)\r\n    }\r\n\r\n    updatedRepository()\r\n  }, [repository_params])\r\n\r\n  if (!repository || !issues) {\r\n    return (\r\n      <Loading><h1>Carregando...</h1></Loading>\r\n    )\r\n  }\r\n\r\n  console.log(issues)\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <img src={LogoImg} alt=\"Logo Github Explorer\" />\r\n        <Link to=\"/\">\r\n          <img src={backIcon} alt=\"Voltar\" />Voltar\r\n        </Link>\r\n      </Header>\r\n      <Infomartion>\r\n        <header>\r\n          <img src={repository.owner.avatar_url} alt=\"Avatar\" />\r\n          <div>\r\n            <strong>{repository.full_name}</strong>\r\n            <p>{\r\n              repository.description\r\n                ? repository.description\r\n                : 'Sem descrição'\r\n            }</p>\r\n          </div>\r\n        </header>\r\n        <ul>\r\n          <ListItem>\r\n            <strong>{repository.stargazers_count}</strong>\r\n            <p>Stars</p>\r\n          </ListItem>\r\n          <ListItem>\r\n            <strong>{repository.forks_count}</strong>\r\n            <p>Forks</p>\r\n          </ListItem>\r\n          <ListItem>\r\n            <strong>{repository.open_issues_count}</strong>\r\n            <p>Issues abertas</p>\r\n          </ListItem>\r\n        </ul>\r\n      </Infomartion>\r\n\r\n      {\r\n        issues.map(({ title, user }) => (\r\n          <Issues\r\n            name={title}\r\n            author={user.login}\r\n          />\r\n        ))\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Repository;","import React from 'react';\r\n\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\n\r\n// => Components\r\nimport Dashboard from './pages/Dashboard'\r\nimport Repository from './pages/Repository'\r\n\r\nconst Routes: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Dashboard} />\r\n        <Route path=\"/repository/:repository_params+\" component={Repository} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;","import { createGlobalStyle } from 'styled-components'\r\nimport BackgroundImage from '../assets/background.svg'\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *:focus{\r\n    outline: none;\r\n  }\r\n\r\n  body{\r\n    background: #E5E5E5 url(${BackgroundImage}) no-repeat 70% top;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n\r\n  body, input, button{\r\n    font-family: Roboto, sans-serif;\r\n  }\r\n\r\n  button{\r\n    cursor: pointer;\r\n  }\r\n\r\n  #root{\r\n    margin: 0 auto;\r\n    padding: 40px 20px;\r\n    max-width: 960px;\r\n  }\r\n`\r\n\r\nexport default GlobalStyles","import React from 'react';\n\n// => Routes\nimport Routes from './Routes'\n\n// => GlobalStyles\nimport GlobalStyles from './styles/global'\n\nconst App = () => {\n  return (\n    <>\n      <Routes />\n      <GlobalStyles />\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}